/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.encodingLang;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.example.encodingLang.EncodingLangFactory
 * @model kind="package"
 * @generated
 */
public interface EncodingLangPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "encodingLang";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/example/EncodingLang";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "encodingLang";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  EncodingLangPackage eINSTANCE = org.xtext.example.encodingLang.impl.EncodingLangPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.example.encodingLang.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.encodingLang.impl.ModelImpl
   * @see org.xtext.example.encodingLang.impl.EncodingLangPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Elements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__ELEMENTS = 0;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.encodingLang.impl.SourceMappingImpl <em>Source Mapping</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.encodingLang.impl.SourceMappingImpl
   * @see org.xtext.example.encodingLang.impl.EncodingLangPackageImpl#getSourceMapping()
   * @generated
   */
  int SOURCE_MAPPING = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SOURCE_MAPPING__NAME = 0;

  /**
   * The feature id for the '<em><b>Aliases</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SOURCE_MAPPING__ALIASES = 1;

  /**
   * The feature id for the '<em><b>Mappings</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SOURCE_MAPPING__MAPPINGS = 2;

  /**
   * The number of structural features of the '<em>Source Mapping</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SOURCE_MAPPING_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.encodingLang.impl.MappingImpl <em>Mapping</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.encodingLang.impl.MappingImpl
   * @see org.xtext.example.encodingLang.impl.EncodingLangPackageImpl#getMapping()
   * @generated
   */
  int MAPPING = 2;

  /**
   * The feature id for the '<em><b>From</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAPPING__FROM = 0;

  /**
   * The feature id for the '<em><b>To</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAPPING__TO = 1;

  /**
   * The number of structural features of the '<em>Mapping</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAPPING_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.encodingLang.impl.ExactMappingImpl <em>Exact Mapping</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.encodingLang.impl.ExactMappingImpl
   * @see org.xtext.example.encodingLang.impl.EncodingLangPackageImpl#getExactMapping()
   * @generated
   */
  int EXACT_MAPPING = 3;

  /**
   * The feature id for the '<em><b>From</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXACT_MAPPING__FROM = MAPPING__FROM;

  /**
   * The feature id for the '<em><b>To</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXACT_MAPPING__TO = MAPPING__TO;

  /**
   * The number of structural features of the '<em>Exact Mapping</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXACT_MAPPING_FEATURE_COUNT = MAPPING_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.example.encodingLang.impl.TransliterationMappingImpl <em>Transliteration Mapping</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.encodingLang.impl.TransliterationMappingImpl
   * @see org.xtext.example.encodingLang.impl.EncodingLangPackageImpl#getTransliterationMapping()
   * @generated
   */
  int TRANSLITERATION_MAPPING = 4;

  /**
   * The feature id for the '<em><b>From</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRANSLITERATION_MAPPING__FROM = MAPPING__FROM;

  /**
   * The feature id for the '<em><b>To</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRANSLITERATION_MAPPING__TO = MAPPING__TO;

  /**
   * The number of structural features of the '<em>Transliteration Mapping</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TRANSLITERATION_MAPPING_FEATURE_COUNT = MAPPING_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.example.encodingLang.impl.AliasImpl <em>Alias</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.encodingLang.impl.AliasImpl
   * @see org.xtext.example.encodingLang.impl.EncodingLangPackageImpl#getAlias()
   * @generated
   */
  int ALIAS = 5;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALIAS__NAME = 0;

  /**
   * The number of structural features of the '<em>Alias</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALIAS_FEATURE_COUNT = 1;


  /**
   * Returns the meta object for class '{@link org.xtext.example.encodingLang.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see org.xtext.example.encodingLang.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.encodingLang.Model#getElements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elements</em>'.
   * @see org.xtext.example.encodingLang.Model#getElements()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Elements();

  /**
   * Returns the meta object for class '{@link org.xtext.example.encodingLang.SourceMapping <em>Source Mapping</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Source Mapping</em>'.
   * @see org.xtext.example.encodingLang.SourceMapping
   * @generated
   */
  EClass getSourceMapping();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.encodingLang.SourceMapping#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.encodingLang.SourceMapping#getName()
   * @see #getSourceMapping()
   * @generated
   */
  EAttribute getSourceMapping_Name();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.encodingLang.SourceMapping#getAliases <em>Aliases</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Aliases</em>'.
   * @see org.xtext.example.encodingLang.SourceMapping#getAliases()
   * @see #getSourceMapping()
   * @generated
   */
  EReference getSourceMapping_Aliases();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.encodingLang.SourceMapping#getMappings <em>Mappings</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Mappings</em>'.
   * @see org.xtext.example.encodingLang.SourceMapping#getMappings()
   * @see #getSourceMapping()
   * @generated
   */
  EReference getSourceMapping_Mappings();

  /**
   * Returns the meta object for class '{@link org.xtext.example.encodingLang.Mapping <em>Mapping</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Mapping</em>'.
   * @see org.xtext.example.encodingLang.Mapping
   * @generated
   */
  EClass getMapping();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.encodingLang.Mapping#getFrom <em>From</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>From</em>'.
   * @see org.xtext.example.encodingLang.Mapping#getFrom()
   * @see #getMapping()
   * @generated
   */
  EAttribute getMapping_From();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.encodingLang.Mapping#getTo <em>To</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>To</em>'.
   * @see org.xtext.example.encodingLang.Mapping#getTo()
   * @see #getMapping()
   * @generated
   */
  EAttribute getMapping_To();

  /**
   * Returns the meta object for class '{@link org.xtext.example.encodingLang.ExactMapping <em>Exact Mapping</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Exact Mapping</em>'.
   * @see org.xtext.example.encodingLang.ExactMapping
   * @generated
   */
  EClass getExactMapping();

  /**
   * Returns the meta object for class '{@link org.xtext.example.encodingLang.TransliterationMapping <em>Transliteration Mapping</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Transliteration Mapping</em>'.
   * @see org.xtext.example.encodingLang.TransliterationMapping
   * @generated
   */
  EClass getTransliterationMapping();

  /**
   * Returns the meta object for class '{@link org.xtext.example.encodingLang.Alias <em>Alias</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Alias</em>'.
   * @see org.xtext.example.encodingLang.Alias
   * @generated
   */
  EClass getAlias();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.encodingLang.Alias#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.encodingLang.Alias#getName()
   * @see #getAlias()
   * @generated
   */
  EAttribute getAlias_Name();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  EncodingLangFactory getEncodingLangFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.example.encodingLang.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.encodingLang.impl.ModelImpl
     * @see org.xtext.example.encodingLang.impl.EncodingLangPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Elements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__ELEMENTS = eINSTANCE.getModel_Elements();

    /**
     * The meta object literal for the '{@link org.xtext.example.encodingLang.impl.SourceMappingImpl <em>Source Mapping</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.encodingLang.impl.SourceMappingImpl
     * @see org.xtext.example.encodingLang.impl.EncodingLangPackageImpl#getSourceMapping()
     * @generated
     */
    EClass SOURCE_MAPPING = eINSTANCE.getSourceMapping();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SOURCE_MAPPING__NAME = eINSTANCE.getSourceMapping_Name();

    /**
     * The meta object literal for the '<em><b>Aliases</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SOURCE_MAPPING__ALIASES = eINSTANCE.getSourceMapping_Aliases();

    /**
     * The meta object literal for the '<em><b>Mappings</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SOURCE_MAPPING__MAPPINGS = eINSTANCE.getSourceMapping_Mappings();

    /**
     * The meta object literal for the '{@link org.xtext.example.encodingLang.impl.MappingImpl <em>Mapping</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.encodingLang.impl.MappingImpl
     * @see org.xtext.example.encodingLang.impl.EncodingLangPackageImpl#getMapping()
     * @generated
     */
    EClass MAPPING = eINSTANCE.getMapping();

    /**
     * The meta object literal for the '<em><b>From</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MAPPING__FROM = eINSTANCE.getMapping_From();

    /**
     * The meta object literal for the '<em><b>To</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MAPPING__TO = eINSTANCE.getMapping_To();

    /**
     * The meta object literal for the '{@link org.xtext.example.encodingLang.impl.ExactMappingImpl <em>Exact Mapping</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.encodingLang.impl.ExactMappingImpl
     * @see org.xtext.example.encodingLang.impl.EncodingLangPackageImpl#getExactMapping()
     * @generated
     */
    EClass EXACT_MAPPING = eINSTANCE.getExactMapping();

    /**
     * The meta object literal for the '{@link org.xtext.example.encodingLang.impl.TransliterationMappingImpl <em>Transliteration Mapping</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.encodingLang.impl.TransliterationMappingImpl
     * @see org.xtext.example.encodingLang.impl.EncodingLangPackageImpl#getTransliterationMapping()
     * @generated
     */
    EClass TRANSLITERATION_MAPPING = eINSTANCE.getTransliterationMapping();

    /**
     * The meta object literal for the '{@link org.xtext.example.encodingLang.impl.AliasImpl <em>Alias</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.encodingLang.impl.AliasImpl
     * @see org.xtext.example.encodingLang.impl.EncodingLangPackageImpl#getAlias()
     * @generated
     */
    EClass ALIAS = eINSTANCE.getAlias();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALIAS__NAME = eINSTANCE.getAlias_Name();

  }

} //EncodingLangPackage
