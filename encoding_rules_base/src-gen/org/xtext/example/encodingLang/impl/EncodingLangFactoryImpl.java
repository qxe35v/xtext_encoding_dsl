/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.encodingLang.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.encodingLang.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class EncodingLangFactoryImpl extends EFactoryImpl implements EncodingLangFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static EncodingLangFactory init()
  {
    try
    {
      EncodingLangFactory theEncodingLangFactory = (EncodingLangFactory)EPackage.Registry.INSTANCE.getEFactory(EncodingLangPackage.eNS_URI);
      if (theEncodingLangFactory != null)
      {
        return theEncodingLangFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new EncodingLangFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EncodingLangFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case EncodingLangPackage.MODEL: return createModel();
      case EncodingLangPackage.SOURCE_MAPPING: return createSourceMapping();
      case EncodingLangPackage.CONVERSION: return createConversion();
      case EncodingLangPackage.MAPPING: return createMapping();
      case EncodingLangPackage.EXACT_MAPPING: return createExactMapping();
      case EncodingLangPackage.TRANSLITERATION_MAPPING: return createTransliterationMapping();
      case EncodingLangPackage.ALIAS: return createAlias();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SourceMapping createSourceMapping()
  {
    SourceMappingImpl sourceMapping = new SourceMappingImpl();
    return sourceMapping;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Conversion createConversion()
  {
    ConversionImpl conversion = new ConversionImpl();
    return conversion;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Mapping createMapping()
  {
    MappingImpl mapping = new MappingImpl();
    return mapping;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ExactMapping createExactMapping()
  {
    ExactMappingImpl exactMapping = new ExactMappingImpl();
    return exactMapping;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TransliterationMapping createTransliterationMapping()
  {
    TransliterationMappingImpl transliterationMapping = new TransliterationMappingImpl();
    return transliterationMapping;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Alias createAlias()
  {
    AliasImpl alias = new AliasImpl();
    return alias;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EncodingLangPackage getEncodingLangPackage()
  {
    return (EncodingLangPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static EncodingLangPackage getPackage()
  {
    return EncodingLangPackage.eINSTANCE;
  }

} //EncodingLangFactoryImpl
